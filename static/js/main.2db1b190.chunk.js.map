{"version":3,"sources":["components/Products.js","App.js","reportWebVitals.js","index.js"],"names":["Products","useState","dataJson","data","selected","setSelected","hide","setHide","Grid","container","spacing","item","xs","md","lg","imageSrc","foto","imageAlt","referencia","largeImageSrc","map","Card","sx","maxWidth","CardActionArea","onClick","nombre","index","findIndex","CardMedia","component","height","image","alt","CardContent","Typography","gutterBottom","variant","precio","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0xDAUe,SAASA,IACpB,MAAwBC,mBAASC,GAAjC,mBAAOC,EAAP,KACA,GADA,KACgCF,sBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAQF,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACKJ,GAEG,cAACE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACI,cAAC,iBAAD,CACIC,SAAQ,6FAAwFX,EAASY,MACzGC,SAAUb,EAASc,WACnBC,cAAa,4FAAuFf,EAASY,UAQtHb,EAAKiB,KAAK,SAAAT,GAAI,OACT,cAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,cAACO,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KAAtB,SACI,eAACC,EAAA,EAAD,CAAgBC,SAzBjBC,EAyBqCf,EAAKe,OAzBhC,WACzB,IAAMC,EAAQxB,EAAKyB,WAAU,SAAAzB,GAAI,OAAIA,EAAKuB,SAAWA,KACzCvB,EAAKwB,GACjBtB,EAAYF,EAAKwB,IACjBpB,GAAQ,KAqBQ,UACI,cAACsB,EAAA,EAAD,CACIC,UAAU,MACVC,OAAO,MACPC,MAAK,6FAAwFrB,EAAKK,MAClGiB,IAAKtB,EAAKe,SAEd,eAACQ,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKP,UAAU,MAAhD,SACKnB,EAAKe,SAEV,eAACS,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKP,UAAU,MAAhD,eACMnB,EAAK2B,UAEX,eAACH,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,iBAAlC,yBACgB5B,EAAKO,wBAxC1B,IAAAQ,QCoBRc,MA/Bf,WACE,OACE,mCACE,eAAChC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,KAG9B,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA9B,SACE,cAACd,EAAD,MAEF,cAACQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,KAG9B,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,WCLvB2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2db1b190.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea } from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport {GlassMagnifier} from \"react-image-magnifiers\";\r\nimport dataJson from '../static/zapato.json'\r\n\r\nexport default function Products() {\r\n    const [data, setData] = useState(dataJson);\r\n    const [selected, setSelected] = useState();\r\n    const [hide, setHide] = useState(false);\r\n\r\n    const onRowClick = nombre => () => {\r\n        const index = data.findIndex(data => data.nombre === nombre);\r\n        const row = data[index]\r\n        setSelected(data[index]) /*AÃ±ade al estado la fila seleccionada*/\r\n        setHide(true);\r\n    }\r\n  return (\r\n    <Grid container spacing={2}>\r\n        {hide && \r\n            (\r\n            <Grid item xs={12} md={12} lg={12}>\r\n                <GlassMagnifier\r\n                    imageSrc={`https://raw.githubusercontent.com/juanpfrancos/store_template/main/src/static/img/r${selected.foto}`}\r\n                    imageAlt={selected.referencia}\r\n                    largeImageSrc={`https://raw.githubusercontent.com/juanpfrancos/store_template/main/src/static/img/${selected.foto}`}\r\n                />\r\n            </Grid>\r\n            )\r\n        }\r\n\r\n\r\n        {\r\n           data.map( item => (\r\n                <Grid item xs={3} md={3} lg={3}>\r\n                    <Card sx={{ maxWidth: 300 }}>\r\n                        <CardActionArea onClick={onRowClick(item.nombre)}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"200\"\r\n                                image={`https://raw.githubusercontent.com/juanpfrancos/store_template/main/src/static/img/r${item.foto}`}\r\n                                alt={item.nombre}\r\n                            />\r\n                            <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                {item.nombre}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                               $ {item.precio}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                               Referencia: {item.referencia}\r\n                            </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            ))\r\n        }\r\n    </Grid>     \r\n    )}\r\n","import './App.css';\nimport Grid from '@mui/material/Grid';\nimport Products from './components/Products'\n\nfunction App() {\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={8} md={12} lg={12}>\n          \n        </Grid>\n        <Grid item xs={4} md={12} lg={12}>\n          <Products/>\n        </Grid>\n        <Grid item xs={4} md={12} lg={12}>\n          \n        </Grid>\n        <Grid item xs={8} md={12} lg={12}>\n          \n        </Grid>\n      </Grid>\n\n    </>\n  );\n}\n\n/*\n\nxs, extra-small: 0px\nsm, small: 600px\nmd, medium: 900px\nlg, large: 1200px\nxl, extra-large: 1536px\n\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}